// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-musl-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  email      String  @unique // Used for authentication with google sso
  gamemaster Boolean @default(false)

  nickname  String
  firstName String
  lastName  String
  hallId    String // 4WH, 4EH, 1H, 3BR, 2BE, etc
  grade     String
  phone     String

  totalKills    Int      @default(0)
  // TODO: needs to be switched to integer, next year though
  currentTarget String? // User id
  previousKills String[] @default([]) // Kill ids
  killed        Boolean  @default(false)
  killedBy      String? // User id

  Kills      Kill[] @relation(name: "kills")
  victimKill Kill?  @relation(name: "victim")
}

model GameConfiguration {
  key   String @unique
  value String
}

model TargetRules {
  id        Int @id @default(autoincrement())
  type      Int
  player1id Int
  player2id Int
}

model Kill {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  killer   User @relation(name: "kills", fields: [killerId], references: [id])
  killerId Int

  victim   User @relation(name: "victim", fields: [victimId], references: [id])
  victimId Int  @unique

  killedAt DateTime
  lat      Float
  long     Float

  approved Boolean @default(false)
  contest  Boolean @default(false) // If the victim disagrees with the kill
}
